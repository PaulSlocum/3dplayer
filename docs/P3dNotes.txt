


________________________________________________________________________________

BUTTONS:
stop (maybe)
power (maybe)
open/close (maybe, also maybe separate buttons)
fastForward (maybe)
rewind (maybe)
play
pause
next
prev
repeatTrack
repeatAlbum
shuffle (maybe)

SLIDERS:
songPosition
bass
treble
volume (maybe)

DISPLAYS:
track/status (open/stop/play/pause)
trackTime
FFT display
multi-track display

OTHER:
cdTray (maybe)

BUTTON LAYOUT:
--------------------------------------------------------------------------------------
       TRACK        TIME                  FFT
       
 PLAY    PAUSE    REPEAT1  REPEATA       TREB+  TREB-
 PREV     NEXT    DISPSEL  PEAK          BASS+  BASS-
 REW      FF                             VOL+   VOL-    
 
                                       OPEN   STANDBY 
---------------------------------------------------------------------------------------



CASES AND ACTIONS TO CONSIDER:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-PLAYBACK CONTROLS (Play/Pause/Prev/Next/FF/Rew/Standby(stop))
-PLAYBACK SETTINGS (Repeat 1/Repeat A)
-SOUND CONTROLS (Treb/Bass/Vol)
-DISPLAY CONTROLS (Disp Sel/Peak)
-TRAY CONTROLS (Open/Close)
~    -     ~    -     ~    -     
-SOUND CONTROL DISPLAY (Show settings momentarily on FFT screen? ...or use individual LED strips above/below buttons?)
-TRAY ANIMATION AND CONTROL
-LED indicators next to buttons



-----------------------------------------------------------------------------------------
WEB AUDIO GOTHCAS

from https://github.com/Jam3/web-audio-player#webaudio-gotchas

There are currently a lot of challenges with cross-platform WebAudio playback. This is likely to change soon as vendors continue fixing bugs.

- Most browsers only support a limited number of AudioContext instances; re-use them where possible.
- When using a buffer source that doesn't loop, the audio file will only be playable once! You will need to create another buffer source to re-play it. This module handles this for you.
- Browsers/devices which do not support createMediaElementSource will need to download and decode the entire audio file before it can be played.
- There is no means of getting progress callback for the decodeAudioData (this is in discussion)
- In iOS 9.2 Chrome (v45.0.2454.89), there is a bug where opening the app directly to the demo will not play any audio. The user will need to refresh the page in order to hear audio.
- iOS Safari has a bug with sampleRate causing playback to be distorted sometimes
- To solve, use ios-safe-audio-context
- Also ensure all audio/video across your site uses the same sampleRate
- In Chrome Android, using buffer and "Add to Home Screen", you can auto-play music without the need for user gesture. This is not the case with iOS "Add to Home Screen."
- In iOS Safari, the <audio> tag's load() method needs to be called; however, this just causes a second (superfluous) request for the file in most other browsers.
- In Chrome, if audioElement.load() is called immediately after audioElement.play(), no sound will occur until the next play() is called.
- In iOS Safari, audio playback must be triggered on a 'touchend' that isn't part of a drag action. One solution is to attempt audio playback only when the distance and time since 'touchstart' is less than a certain threshold; see tap-event.
- In Safari 9+, AudioContext state might default to "suspended" â€” to get around this, we resume the context when play() is called
- In recent Chrome, you can't use datauri with crossOrigin: 'Anonymous'
- If multiple sources are provided to Safari and the first has an error, the browser will not attempt to load any subsequent sources
-----------------------------------------------------------------------------------------

